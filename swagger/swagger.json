{
  "openapi": "3.0.0",
  "info": {
    "title": "Solar System API",
    "version": "1.0.0",
    "description": "API for managing planets and moons in the solar system"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "Planets",
      "description": "Operations with planets"
    },
    {
      "name": "Moons",
      "description": "Operations with moons"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 6
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["email", "password", "name"]
              },
              "example": {
                "email": "user@example.com",
                "password": "securepassword123",
                "name": "John Doe"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input or email already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": ["email", "password"]
              },
              "example": {
                "email": "user@example.com",
                "password": "securepassword123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token for authentication"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/auth0": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Initiate Auth0 authentication",
        "responses": {
          "302": {
            "description": "Redirect to Auth0 login page"
          }
        }
      }
    },
    "/auth/auth0/callback": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Auth0 callback endpoint",
        "responses": {
          "302": {
            "description": "Redirect after successful authentication"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Logout current user",
        "responses": {
          "302": {
            "description": "Redirect after logout"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user information",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Current user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/planets": {
      "get": {
        "summary": "Get all planets",
        "tags": ["Planets"],
        "responses": {
          "200": {
            "description": "List of planets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Planet" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new planet",
        "tags": ["Planets"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Planet" },
              "example": {
                "name": "Neptune",
                "orderFromSun": 8,
                "diameter": 49244,
                "mass": "1.02 × 10^26 kg",
                "hasRings": true,
                "moonsCount": 14,
                "atmosphere": ["hydrogen", "helium", "methane"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Planet created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/planets/{id}": {
      "get": {
        "summary": "Get a planet by ID",
        "tags": ["Planets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Planet found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Planet" }
              }
            }
          },
          "404": {
            "description": "Planet not found"
          }
        }
      },
      "put": {
        "summary": "Update a planet by ID",
        "tags": ["Planets"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "orderFromSun": { "type": "integer" },
                  "diameter": { "type": "number" },
                  "mass": { "type": "string" },
                  "hasRings": { "type": "boolean" },
                  "moonsCount": { "type": "integer" },
                  "atmosphere": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              },
              "example": {
                "name": "Updated Planet",
                "diameter": 50000,
                "mass": "9.5 × 10^25 kg",
                "moonsCount": 20,
                "hasRings": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Planet updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Planet not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a planet by ID",
        "tags": ["Planets"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Planet deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Planet not found"
          }
        }
      }
    },
    "/api/moons": {
      "get": {
        "summary": "Get all moons",
        "tags": ["Moons"],
        "responses": {
          "200": {
            "description": "List of moons",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Moon" }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new moon",
        "tags": ["Moons"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Moon" },
              "example": {
                "name": "Europa",
                "planet": "Jupiter",
                "diameter": 3121.6,
                "discoveredBy": "Galileo Galilei",
                "discoveryYear": 1610,
                "orbitalPeriod": 3.5,
                "isTidallyLocked": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Moon created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/moons/{id}": {
      "get": {
        "summary": "Get moon by ID",
        "tags": ["Moons"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Moon found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Moon" }
              }
            }
          },
          "404": {
            "description": "Moon not found"
          }
        }
      },
      "put": {
        "summary": "Update a moon by ID",
        "tags": ["Moons"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Moon" },
              "example": {
                "name": "Europa",
                "diameter": 3140,
                "planet": "Jupiter",
                "discoveredBy": "Galileo Galilei",
                "discoveryYear": 1610,
                "orbitalPeriod": 3.5,
                "isTidallyLocked": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Moon updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Moon not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a moon by ID",
        "tags": ["Moons"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Moon deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Moon not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "authProvider": {
            "type": "string",
            "enum": ["local", "auth0"]
          }
        }
      },
      "Planet": {
        "type": "object",
        "required": [
          "name",
          "orderFromSun",
          "diameter",
          "mass",
          "hasRings",
          "moonsCount",
          "atmosphere"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ObjectId"
          },
          "name": { "type": "string" },
          "orderFromSun": { "type": "integer" },
          "diameter": { "type": "number" },
          "mass": { "type": "string" },
          "hasRings": { "type": "boolean" },
          "moonsCount": { "type": "integer" },
          "atmosphere": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },
      "Moon": {
        "type": "object",
        "required": ["name", "planet", "diameter"],
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "planet": { "type": "string" },
          "diameter": { "type": "number" },
          "discoveredBy": { "type": "string" },
          "discoveryYear": { "type": "integer" },
          "orbitalPeriod": { "type": "number" },
          "isTidallyLocked": { "type": "boolean" }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
